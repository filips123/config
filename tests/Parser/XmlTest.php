<?php
namespace Noodlehaus\Parser\Test;

use PHPUnit\Framework\TestCase;
use Noodlehaus\Parser\Xml;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-04-21 at 22:37:22.
 */
class XmlTest extends TestCase
{
    /**
     * @var Xml
     */
    protected $xml;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->xml = new Xml();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Noodlehaus\Parser\Xml::getSupportedExtensions()
     */
    public function testGetSupportedExtensions()
    {
        $expected = ['xml'];
        $actual   = $this->xml->getSupportedExtensions();
        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers                   Noodlehaus\Parser\Xml::decode()
     * @expectedException        Noodlehaus\Exception\ParseException
     * @expectedExceptionMessage Opening and ending tag mismatch: name line 4
     */
    public function testLoadInvalidXml()
    {
        $this->xml->decode(file_get_contents(__DIR__ . '/../mocks/fail/error.xml'));
    }

    /**
     * @covers Noodlehaus\Parser\Xml::decode()
     */
    public function testLoadXml()
    {
        $actual = $this->xml->decode(file_get_contents(__DIR__ . '/../mocks/pass/config.xml'));
        $this->assertEquals('localhost', $actual['host']);
        $this->assertEquals('80', $actual['port']);
    }

    /**
     * @covers Noodlehaus\Parser\Xml::encode()
     * @covers Noodlehaus\Parser\Xml::toXML()
     */
    function testEncodeJson()
    {
        $actual = $this->xml->encode([
            'database' => [
                'host' => 'localhost',
                'port' => '3306',
            ],
            'app' => [
                'name' => 'config',
                'description' => 'Config Reader and Writer',
            ],
        ]);
        $expected = <<<EOD
<?xml version="1.0"?>
<config><database><host>localhost</host><port>3306</port></database><app><name>config</name><description>Config Reader and Writer</description></app></config>

EOD;
        $this->assertEquals($expected, $actual);
    }
}
